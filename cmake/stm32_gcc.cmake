get_filename_component(STM32_CMAKE_DIR ${CMAKE_CURRENT_LIST_FILE} DIRECTORY)
list(APPEND CMAKE_MODULE_PATH ${STM32_CMAKE_DIR})

include(stm32/common)

set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
find_program(CMAKE_C_COMPILER NAMES ${STM32_TARGET_TRIPLET}-gcc PATHS ${TOOLCHAIN_BIN_PATH})
find_program(CMAKE_CXX_COMPILER NAMES ${STM32_TARGET_TRIPLET}-g++ PATHS ${TOOLCHAIN_BIN_PATH})
find_program(CMAKE_ASM_COMPILER NAMES ${STM32_TARGET_TRIPLET}-gcc PATHS ${TOOLCHAIN_BIN_PATH})

# For the case no compiler was found: prevent host compiler to be picked by CMake
set(CMAKE_C_COMPILER_EXCLUDE cc cl bcc xlc clang)
set(CMAKE_C_COMPILER_TARGET ${STM32_TARGET_TRIPLET})
set(CMAKE_CXX_COMPILER_TARGET ${STM32_TARGET_TRIPLET})
set(CMAKE_ASM_COMPILER_TARGET ${STM32_TARGET_TRIPLET})
set(_CMAKE_TOOLCHAIN_PREFIX ${STM32_TARGET_TRIPLET}-)
